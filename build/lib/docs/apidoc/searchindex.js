Search.setIndex({"docnames": ["index", "modules", "polnet"], "filenames": ["index.rst", "modules.rst", "polnet.rst"], "titles": ["Welcome to PolNet\u2019s documentation!", "polnet", "polnet package"], "terms": {"packag": [0, 1], "index": 0, "modul": [0, 1], "search": [0, 2], "page": 0, "submodul": 1, "affin": 1, "angle_axis_to_quat": [1, 2], "gen_rand_unit_quaternion": [1, 2], "ortho_vector": [1, 2], "poly_rotate_wxyz": [1, 2], "poly_scal": [1, 2], "poly_transl": [1, 2], "quat_mult": [1, 2], "quat_to_angle_axi": [1, 2], "quat_to_mat": [1, 2], "quat_two_vector": [1, 2], "rot_mat_zyz": [1, 2], "rot_to_quat": [1, 2], "rot_vect_quat": [1, 2], "tomo_rot": [1, 2], "tomo_shift": [1, 2], "uniform_sampling_so3": [1, 2], "vect_rot": [1, 2], "vect_to_zmat": [1, 2], "vector_modul": [1, 2], "lio": 1, "load_csv_into_tomo_t": [1, 2], "load_mrc": [1, 2], "load_poli": [1, 2], "numpy_to_vti": [1, 2], "read_mrc_v_siz": [1, 2], "save_vti": [1, 2], "save_vtp": [1, 2], "write_mrc": [1, 2], "write_t": [1, 2], "lrandom": 1, "ellipgen": [1, 2], "gen_paramet": [1, 2], "gen_parameters_exp": [1, 2], "occgen": [1, 2], "gen_occup": [1, 2], "pgenhelixfib": [1, 2], "gen_length": [1, 2], "gen_persistence_length": [1, 2], "gen_zf_length": [1, 2], "pgenhelixfiberb": [1, 2], "gen_branch": [1, 2], "sgen": [1, 2], "gen_next_mmer_id": [1, 2], "sgenfix": [1, 2], "sgenprop": [1, 2], "sgenuniform": [1, 2], "sphgen": [1, 2], "surfgen": [1, 2], "gen_den_cf": [1, 2], "torgen": [1, 2], "gen_bounded_exp": [1, 2], "membran": 1, "mb": [1, 2], "get_layer_": [1, 2], "get_mask": [1, 2], "get_thick": [1, 2], "get_tomo": [1, 2], "get_vol": [1, 2], "get_vtp": [1, 2], "insert_density_svol": [1, 2], "mask": [1, 2], "mbellipsoid": [1, 2], "mberror": [1, 2], "mbsphere": [1, 2], "mbtoru": [1, 2], "setmembran": [1, 2], "build_set": [1, 2], "check_overlap": [1, 2], "compute_overlap": [1, 2], "get_gtruth": [1, 2], "get_mb_occup": [1, 2], "get_num_mb": [1, 2], "get_voi": [1, 2], "insert_mb": [1, 2], "network": 1, "branch": [1, 2], "get_point": [1, 2], "get_s_mmer": [1, 2], "get_s_pmer": [1, 2], "get_t_pmer": [1, 2], "set_t_pmer": [1, 2], "nethelixfib": [1, 2], "build_network": [1, 2], "nethelixfiberb": [1, 2], "get_branch_list": [1, 2], "get_branches_vtp": [1, 2], "get_skel": [1, 2], "netsawlc": [1, 2], "netsawlcint": [1, 2], "add_monomer_to_voi": [1, 2], "add_polym": [1, 2], "count_protein": [1, 2], "gen_vtp_points_tomo": [1, 2], "get_num_mm": [1, 2], "get_num_pm": [1, 2], "get_pmer_fail": [1, 2], "get_pmers_list": [1, 2], "get_polymer_occup": [1, 2], "set_min_nmm": [1, 2], "set_voi": [1, 2], "poli": 1, "add_label_to_poli": [1, 2], "add_sfield_to_poli": [1, 2], "convex_hull_surfac": [1, 2], "find_point_on_poli": [1, 2], "gen_rand_quaternion_on_vector": [1, 2], "gen_uni_s2_sample_on_poli": [1, 2], "gen_uni_s2_sample_on_poly_int": [1, 2], "merge_poli": [1, 2], "points_to_poly_spher": [1, 2], "poly_center_mass": [1, 2], "poly_decim": [1, 2], "poly_diam": [1, 2], "poly_mask": [1, 2], "poly_max_dist": [1, 2], "poly_point_min_dst": [1, 2], "poly_reverse_norm": [1, 2], "poly_surface_area": [1, 2], "poly_volum": [1, 2], "polym": 1, "fiberunit": [1, 2], "fiberunitsdim": [1, 2], "helixfib": [1, 2], "gen_new_monom": [1, 2], "set_refer": [1, 2], "mtunit": [1, 2], "monom": [1, 2], "bound_in_bound": [1, 2], "compute_bound": [1, 2], "get_area": [1, 2], "get_center_mass": [1, 2], "get_copi": [1, 2], "get_diamet": [1, 2], "get_trans_list": [1, 2], "overlap_mm": [1, 2], "overlap_net": [1, 2], "overlap_voi": [1, 2], "point_in_bound": [1, 2], "rotate_q": [1, 2], "translat": [1, 2], "add_monom": [1, 2], "get_mmer_cent": [1, 2], "get_mmer_cod": [1, 2], "get_mmer_id": [1, 2], "get_mmer_rot": [1, 2], "get_mmers_list": [1, 2], "get_monom": [1, 2], "get_num_monom": [1, 2], "get_tail_point": [1, 2], "get_total_len": [1, 2], "overlap_polym": [1, 2], "sawlc": [1, 2], "sawlcpoli": [1, 2], "stomo": 1, "actinfil": [1, 2], "get_bprop": [1, 2], "get_p_branch": [1, 2], "load_ac_fil": [1, 2], "helixfil": [1, 2], "get_den_cf_rg": [1, 2], "get_hp_len": [1, 2], "get_l": [1, 2], "get_min_nmm": [1, 2], "get_min_p_len": [1, 2], "get_mmer_rad": [1, 2], "get_mz_len": [1, 2], "get_mz_len_f": [1, 2], "get_occ": [1, 2], "get_over_tol": [1, 2], "get_thick_rg": [1, 2], "get_typ": [1, 2], "load_hx_fil": [1, 2], "mtfile": [1, 2], "get_nunit": [1, 2], "get_rad": [1, 2], "load_mt_fil": [1, 2], "mbfile": [1, 2], "get_layer_s_rg": [1, 2], "get_max_ecc": [1, 2], "get_min_rad": [1, 2], "load_mb_fil": [1, 2], "mmerfil": [1, 2], "get_iso": [1, 2], "get_mmer_svol": [1, 2], "get_pmer_l": [1, 2], "get_pmer_l_max": [1, 2], "get_pmer_np": [1, 2], "get_pmer_occ": [1, 2], "get_pmer_over_tol": [1, 2], "load_mmer_fil": [1, 2], "mmermbfil": [1, 2], "get_mb_z_height": [1, 2], "get_pmer_reverse_norm": [1, 2], "load_mmer_mb_fil": [1, 2], "settomo": [1, 2], "add_tomo": [1, 2], "save_csv": [1, 2], "synthtomo": [1, 2], "add_network": [1, 2], "add_set_mb": [1, 2], "get_den": [1, 2], "get_mic": [1, 2], "get_motif_list": [1, 2], "get_poli": [1, 2], "set_den": [1, 2], "set_mic": [1, 2], "set_poli": [1, 2], "set_tomo": [1, 2], "tem": 1, "add_detector_nois": [1, 2], "add_mics_misalign": [1, 2], "gen_tilt_series_imod": [1, 2], "invert_mics_den": [1, 2], "recon3d_imod": [1, 2], "set_head": [1, 2], "util": 1, "clean_dir": [1, 2], "density_norm": [1, 2], "gen_shpere_mask": [1, 2], "gen_six_connectivity_mask": [1, 2], "gen_uni_s2_sampl": [1, 2], "get_sub_copi": [1, 2], "insert_svol_tomo": [1, 2], "is_closed_surfac": [1, 2], "iso_surfac": [1, 2], "lin_map": [1, 2], "nn_iterp": [1, 2], "point_to_poli": [1, 2], "points_dist": [1, 2], "poly_filter_triangl": [1, 2], "poly_threshold": [1, 2], "tomo_crop_non_zero": [1, 2], "trilin_interp": [1, 2], "vol_cub": [1, 2], "wrap_angl": [1, 2], "content": 1, "function": 2, "transform": 2, "ang": 2, "x": 2, "y": 2, "z": 2, "deg": 2, "true": 2, "sourc": 2, "given": 2, "angl": 2, "axi": 2, "comput": 2, "its": 2, "correspond": 2, "unit": 2, "quaternion": 2, "paramet": 2, "valu": 2, "default": 2, "input": 2, "i": 2, "degre": 2, "otherwis": 2, "radian": 2, "return": 2, "4": 2, "arrai": 2, "gener": 2, "random": 2, "sampl": 2, "kuffner": 2, "jame": 2, "j": 2, "effect": 2, "distanc": 2, "metric": 2, "3d": 2, "rigid": 2, "bodi": 2, "path": 2, "plan": 2, "In": 2, "ieee": 2, "intern": 2, "confer": 2, "robot": 2, "autom": 2, "2004": 2, "proceed": 2, "icra": 2, "04": 2, "p": 2, "3993": 2, "3998": 2, "shape": 2, "q": 2, "w": 2, "co": 2, "\u03b8": 2, "2": 2, "vx": 2, "sin": 2, "vy": 2, "vz": 2, "where": 2, "heta": 2, "v": 2, "ani": 2, "orthogon": 2, "vector": 2, "an": 2, "thi": 2, "implement": 2, "us": 2, "cross": 2, "product": 2, "most": 2, "basi": 2, "output": 2, "in_vtp": 2, "appli": 2, "rotat": 2, "vtkpolydata": 2, "from": 2, "form": 2, "": 2, "scale": 2, "factor": 2, "t": 2, "q1": 2, "q2": 2, "multipli": 2, "two": 2, "first": 2, "second": 2, "qw": 2, "qx": 2, "qy": 2, "qz": 2, "represent": 2, "3": 2, "covert": 2, "full": 2, "three": 2, "dimension": 2, "matrix": 2, "A": 2, "element": 2, "repres": 2, "q0": 2, "q3": 2, "3x3": 2, "convert": 2, "point": 2, "local": 2, "refer": 2, "frame": 2, "global": 2, "b": 2, "one": 2, "anoth": 2, "origin": 2, "destin": 2, "thar": 2, "align": 2, "rot": 2, "tilt": 2, "psi": 2, "creat": 2, "accord": 2, "zy": 2, "euler": 2, "convent": 2, "relion": 2, "xmipp": 2, "compat": 2, "direct": 2, "code": 2, "http": 2, "github": 2, "com": 2, "jjcorreao": 2, "blob": 2, "master": 2, "1": 2, "src": 2, "cpp": 2, "ar": 2, "paramn": 2, "third": 2, "numpi": 2, "ndarrai": 2, "dirmens": 2, "real": 2, "part": 2, "tupl": 2, "imaginari": 2, "rodrigu": 2, "formula": 2, "tomo": 2, "center": 2, "none": 2, "activ": 2, "order": 2, "mode": 2, "constant": 2, "cval": 2, "0": 2, "prefilt": 2, "defin": 2, "tomogram": 2, "encod": 2, "passiv": 2, "see": 2, "doc": 2, "scipi": 2, "ndimag": 2, "interpol": 2, "map_coordin": 2, "shift": 2, "fourier": 2, "space": 2, "must": 2, "everi": 2, "dimens": 2, "n": 2, "uniform": 2, "so3": 2, "follow": 2, "determinist": 2, "approach": 2, "proposs": 2, "m": 2, "alexa": 2, "super": 2, "fibonacci": 2, "spiral": 2, "fast": 2, "low": 2, "discrep": 2, "so": 2, "2022": 2, "cvf": 2, "vision": 2, "pattern": 2, "recognit": 2, "cvpr": 2, "new": 2, "orlean": 2, "la": 2, "usa": 2, "pp": 2, "8281": 2, "8290": 2, "doi": 2, "10": 2, "1109": 2, "cvpr52688": 2, "00811": 2, "number": 2, "n_samp": 2, "vect": 2, "1d": 2, "length": 2, "v_in": 2, "either": 2, "pasiv": 2, "o": 2, "in_csv_fil": 2, "load": 2, "csv": 2, "file": 2, "dictionari": 2, "tabl": 2, "each": 2, "densiti": 2, "entri": 2, "contain": 2, "all": 2, "particl": 2, "singl": 2, "fname": 2, "mmap": 2, "fals": 2, "no_sax": 2, "mrc": 2, "data": 2, "read": 2, "memori": 2, "map": 2, "ax": 2, "swape": 2, "cancel": 2, "made": 2, "mrcfile": 2, "memmap": 2, "object": 2, "vtp": 2, "dtype": 2, "vtkimagedata": 2, "vtk": 2, "type": 2, "vtk_float": 2, "vktimagedata": 2, "voxel": 2, "size": 2, "header": 2, "filenam": 2, "angstrom": 2, "imag": 2, "store": 2, "vti": 2, "v_size": 2, "save": 2, "dataset": 2, "consid": 2, "out_fil": 2, "class": 2, "model": 2, "combin": 2, "volum": 2, "radius_rg": 2, "max_ecc": 2, "max_tri": 2, "1000000": 2, "base": 2, "paramat": 2, "ellipsoid": 2, "randomli": 2, "semi": 2, "distribut": 2, "sort": 2, "descend": 2, "bound": 2, "exponenti": 2, "occ_rg": 2, "occup": 2, "float": 2, "abc": 2, "helix": 2, "fiber": 2, "min_l": 2, "max_l": 2, "rang": 2, "minimum": 2, "maximum": 2, "min_p": 2, "persist": 2, "lambda": 2, "min_zf": 2, "max_zf": 2, "within": 2, "b_prob": 2, "5": 2, "boolean": 2, "some": 2, "probabl": 2, "abstract": 2, "sequenc": 2, "n_mmer": 2, "prev_id": 2, "id": 2, "next": 2, "difer": 2, "previou": 2, "identifi": 2, "integ": 2, "indic": 2, "fix": 2, "n_surf": 2, "prop_l": 2, "proport": 2, "differ": 2, "need": 2, "becaus": 2, "inform": 2, "introduc": 2, "dure": 2, "construct": 2, "param": 2, "memoryless": 2, "uniformli": 2, "sphere": 2, "radii": 2, "radiu": 2, "parametr": 2, "surfac": 2, "high": 2, "between": 2, "toru": 2, "tube": 2, "mean": 2, "lb": 2, "ub": 2, "get": 2, "until": 2, "fall": 2, "lower": 2, "hb": 2, "higher": 2, "rais": 2, "runtimeerror": 2, "found": 2, "after": 2, "max_tries_exp": 2, "parallel": 2, "gaussian": 2, "profil": 2, "tomo_shap": 2, "rot_q": 2, "thick": 2, "layer_": 2, "geometri": 2, "sigma": 2, "layer": 2, "binari": 2, "bilay": 2, "gap": 2, "onli": 2, "onc": 2, "merg": 2, "max": 2, "grow": 2, "insert": 2, "m_svol": 2, "ad": 2, "valid": 2, "min": 2, "sum": 2, "determin": 2, "which": 2, "voi": 2, "remov": 2, "extern": 2, "same": 2, "posit": 2, "set": 2, "c": 2, "except": 2, "rad": 2, "spheric": 2, "rad_a": 2, "rad_b": 2, "toroid": 2, "gen_rnd_surf": 2, "param_rg": 2, "thick_rg": 2, "layer_rg": 2, "occ": 2, "over_toler": 2, "bg_voi": 2, "verbos": 2, "build": 2, "them": 2, "messag": 2, "info": 2, "about": 2, "print": 2, "overlap": 2, "member": 2, "check": 2, "toler": 2, "percentag": 2, "ground": 2, "truth": 2, "check_vol": 2, "disabl": 2, "equal": 2, "zero": 2, "valueerror": 2, "s_pmer_id": 2, "s_mmer_id": 2, "t_pmer_id": 2, "brach": 2, "coordin": 2, "start": 2, "target": 2, "shape_vtp": 2, "polydata": 2, "todo": 2, "far": 2, "isotrop": 2, "recommend": 2, "tangent": 2, "yet": 2, "l_length": 2, "m_surf": 2, "gen_hfib_param": 2, "min_p_len": 2, "hp_len": 2, "mz_len": 2, "mz_len_f": 2, "unit_diam": 2, "isol": 2, "unconnect": 2, "add": 2, "fibr": 2, "limit": 2, "pass": 2, "b_prop": 2, "max_p_branch": 2, "branck": 2, "list": 2, "line": 2, "max_p_length": 2, "gen_pol_length": 2, "svol": 2, "tries_mmer": 2, "20": 2, "tries_pmer": 2, "100": 2, "gen_seq_mm": 2, "compaq": 2, "rots_mmer": 2, "intercal": 2, "mmer": 2, "mmer_svol": 2, "mmer_voi": 2, "subvolum": 2, "occ_mod": 2, "area": 2, "instanc": 2, "genrrat": 2, "statist": 2, "protein": 2, "close": 2, "project": 2, "tick": 2, "add_vert": 2, "add_lin": 2, "verts_rad": 2, "skeleton": 2, "connect": 2, "vertic": 2, "includ": 2, "vert": 2, "vertex": 2, "just": 2, "off_svol": 2, "sub": 2, "offset": 2, "min_nmmer": 2, "filament": 2, "monomenr": 2, "per": 2, "process": 2, "lbl": 2, "p_name": 2, "cell": 2, "label": 2, "poly_data": 2, "properti": 2, "name": 2, "exist": 2, "poly_dota": 2, "select": 2, "wheter": 2, "both": 2, "sfield": 2, "interp": 2, "nn": 2, "scalar": 2, "field": 2, "string": 2, "associ": 2, "int": 2, "nearest": 2, "neighbour": 2, "trilin": 2, "trilinear": 2, "defualt": 2, "extract": 2, "convex": 2, "hull": 2, "find": 2, "closest": 2, "ha": 2, "around": 2, "plu": 2, "approxim": 2, "intersect": 2, "holow": 2, "hollow": 2, "sph_re": 2, "360": 2, "deprec": 2, "usag": 2, "vtkintersectionpolydatafilt": 2, "make": 2, "too": 2, "slow": 2, "resolut": 2, "longitud": 2, "latitud": 2, "poly_1": 2, "poly_2": 2, "mass": 2, "dec": 2, "decim": 2, "specifi": 2, "desir": 2, "reduct": 2, "total": 2, "polygon": 2, "e": 2, "g": 2, "targetreduct": 2, "9": 2, "filter": 2, "try": 2, "reduc": 2, "diamet": 2, "time": 2, "maximumd": 2, "out": 2, "chull": 2, "firstli": 2, "avoid": 2, "hole": 2, "directli": 2, "revers": 2, "normal": 2, "copi": 2, "self": 2, "worm": 2, "like": 2, "chain": 2, "linear": 2, "sph_rad": 2, "dimer": 2, "p_length": 2, "hp_length": 2, "mz_length": 2, "z_length_f": 2, "p0": 2, "rot_rand": 2, "helic": 2, "flexibl": 2, "net": 2, "max_dist": 2, "fraction": 2, "forbidden": 2, "region": 2, "greater": 2, "than": 2, "current": 2, "allow": 2, "collis": 2, "case": 2, "fail": 2, "initi": 2, "befor": 2, "thei": 2, "forgotten": 2, "helicoid": 2, "consequ": 2, "fit": 2, "40": 2, "mt_rad": 2, "n_unit": 2, "13": 2, "microtubul": 2, "mt": 2, "diam": 2, "least": 2, "partial": 2, "plane": 2, "ssphere": 2, "al": 2, "dupl": 2, "r": 2, "momonm": 2, "seach": 2, "requir": 2, "condit": 2, "Of": 2, "interest": 2, "t_v": 2, "id0": 2, "code0": 2, "known": 2, "necessari": 2, "m_id": 2, "monomn": 2, "monomo": 2, "central": 2, "latest": 2, "momom": 2, "conect": 2, "other": 2, "fix_dst": 2, "ext_surf": 2, "were": 2, "synthet": 2, "For": 2, "handl": 2, "actin": 2, "structur": 2, "configur": 2, "inherit": 2, "in_fil": 2, "extens": 2, "hn": 2, "microtubular": 2, "pn": 2, "pm": 2, "simul": 2, "synttomo": 2, "motif": 2, "format": 2, "disk": 2, "larg": 2, "pixel": 2, "background": 2, "alwai": 2, "m_type": 2, "taken": 2, "set_mb": 2, "den": 2, "mic": 2, "transmis": 2, "electron": 2, "microscopi": 2, "veri": 2, "import": 2, "imod": 2, "instal": 2, "system": 2, "work_dir": 2, "transmiss": 2, "microscop": 2, "snr": 2, "detector": 2, "nois": 2, "micrograph": 2, "readout": 2, "dark": 2, "typic": 2, "magnitud": 2, "last": 2, "neglect": 2, "level": 2, "mn": 2, "mx": 2, "n_sigma": 2, "misalign": 2, "micrograh": 2, "seri": 2, "sinusoid": 2, "f": 2, "t_angl": 2, "max_t_angl": 2, "minimun": 2, "mislign": 2, "vol": 2, "2d": 2, "xyzproj": 2, "non": 2, "empti": 2, "iter": 2, "byte": 2, "invert": 2, "perform": 2, "reconstruct": 2, "p_size": 2, "alter": 2, "alterhead": 2, "script": 2, "chang": 2, "rec3d": 2, "common": 2, "dir": 2, "clean": 2, "directori": 2, "preserv": 2, "inv": 2, "std": 2, "whole": 2, "6": 2, "3x3x3": 2, "sub_pt": 2, "sub_shap": 2, "subtomogram": 2, "even": 2, "go": 2, "modifi": 2, "th": 2, "flp": 2, "iso": 2, "threshold": 2, "flip": 2, "forc": 2, "guarante": 2, "orient": 2, "inward": 2, "outward": 2, "precis": 2, "up": 2, "triangl": 2, "remap": 2, "grai": 2, "upper": 2, "n_name": 2, "n_normal": 2, "vtppolydata": 2, "euclidean": 2, "d": 2, "keep": 2, "low_th": 2, "hi_th": 2, "assign": 2, "crop": 2, "focu": 2, "off": 2, "reshap": 2, "being": 2, "cubic": 2, "cube": 2, "largest": 2, "wrap": 2, "express": 2, "pi": 2, "180": 2, "mai": 2, "also": 2, "proper": 2}, "objects": {"": [[2, 0, 0, "-", "polnet"]], "polnet": [[2, 0, 0, "-", "affine"], [2, 0, 0, "-", "lio"], [2, 0, 0, "-", "lrandom"], [2, 0, 0, "-", "membrane"], [2, 0, 0, "-", "network"], [2, 0, 0, "-", "poly"], [2, 0, 0, "-", "polymer"], [2, 0, 0, "-", "stomo"], [2, 0, 0, "-", "tem"], [2, 0, 0, "-", "utils"]], "polnet.affine": [[2, 1, 1, "", "angle_axis_to_quat"], [2, 1, 1, "", "gen_rand_unit_quaternion"], [2, 1, 1, "", "ortho_vector"], [2, 1, 1, "", "poly_rotate_wxyz"], [2, 1, 1, "", "poly_scale"], [2, 1, 1, "", "poly_translate"], [2, 1, 1, "", "quat_mult"], [2, 1, 1, "", "quat_to_angle_axis"], [2, 1, 1, "", "quat_to_mat"], [2, 1, 1, "", "quat_two_vectors"], [2, 1, 1, "", "rot_mat_zyz"], [2, 1, 1, "", "rot_to_quat"], [2, 1, 1, "", "rot_vect_quat"], [2, 1, 1, "", "tomo_rotate"], [2, 1, 1, "", "tomo_shift"], [2, 1, 1, "", "uniform_sampling_so3"], [2, 1, 1, "", "vect_rotate"], [2, 1, 1, "", "vect_to_zmat"], [2, 1, 1, "", "vector_module"]], "polnet.lio": [[2, 1, 1, "", "load_csv_into_tomo_tables"], [2, 1, 1, "", "load_mrc"], [2, 1, 1, "", "load_poly"], [2, 1, 1, "", "numpy_to_vti"], [2, 1, 1, "", "read_mrc_v_size"], [2, 1, 1, "", "save_vti"], [2, 1, 1, "", "save_vtp"], [2, 1, 1, "", "write_mrc"], [2, 1, 1, "", "write_table"]], "polnet.lrandom": [[2, 2, 1, "", "EllipGen"], [2, 2, 1, "", "OccGen"], [2, 2, 1, "", "PGenHelixFiber"], [2, 2, 1, "", "PGenHelixFiberB"], [2, 2, 1, "", "SGen"], [2, 2, 1, "", "SGenFixed"], [2, 2, 1, "", "SGenProp"], [2, 2, 1, "", "SGenUniform"], [2, 2, 1, "", "SphGen"], [2, 2, 1, "", "SurfGen"], [2, 2, 1, "", "TorGen"], [2, 1, 1, "", "gen_bounded_exp"]], "polnet.lrandom.EllipGen": [[2, 3, 1, "", "gen_parameters"], [2, 3, 1, "", "gen_parameters_exp"]], "polnet.lrandom.OccGen": [[2, 3, 1, "", "gen_occupancy"]], "polnet.lrandom.PGenHelixFiber": [[2, 3, 1, "", "gen_length"], [2, 3, 1, "", "gen_persistence_length"], [2, 3, 1, "", "gen_zf_length"]], "polnet.lrandom.PGenHelixFiberB": [[2, 3, 1, "", "gen_branch"]], "polnet.lrandom.SGen": [[2, 3, 1, "", "gen_next_mmer_id"]], "polnet.lrandom.SGenFixed": [[2, 3, 1, "", "gen_next_mmer_id"]], "polnet.lrandom.SGenProp": [[2, 3, 1, "", "gen_next_mmer_id"]], "polnet.lrandom.SGenUniform": [[2, 3, 1, "", "gen_next_mmer_id"]], "polnet.lrandom.SphGen": [[2, 3, 1, "", "gen_parameters"]], "polnet.lrandom.SurfGen": [[2, 3, 1, "", "gen_den_cf"], [2, 3, 1, "", "gen_parameters"]], "polnet.lrandom.TorGen": [[2, 3, 1, "", "gen_parameters"]], "polnet.membrane": [[2, 2, 1, "", "Mb"], [2, 2, 1, "", "MbEllipsoid"], [2, 4, 1, "", "MbError"], [2, 2, 1, "", "MbSphere"], [2, 2, 1, "", "MbTorus"], [2, 2, 1, "", "SetMembranes"]], "polnet.membrane.Mb": [[2, 3, 1, "", "get_layer_s"], [2, 3, 1, "", "get_mask"], [2, 3, 1, "", "get_thick"], [2, 3, 1, "", "get_tomo"], [2, 3, 1, "", "get_vol"], [2, 3, 1, "", "get_vtp"], [2, 3, 1, "", "insert_density_svol"], [2, 3, 1, "", "masking"]], "polnet.membrane.SetMembranes": [[2, 3, 1, "", "build_set"], [2, 3, 1, "", "check_overlap"], [2, 3, 1, "", "compute_overlap"], [2, 3, 1, "", "get_gtruth"], [2, 3, 1, "", "get_mb_occupancy"], [2, 3, 1, "", "get_num_mbs"], [2, 3, 1, "", "get_tomo"], [2, 3, 1, "", "get_voi"], [2, 3, 1, "", "get_vol"], [2, 3, 1, "", "get_vtp"], [2, 3, 1, "", "insert_mb"]], "polnet.network": [[2, 2, 1, "", "Branch"], [2, 2, 1, "", "NetHelixFiber"], [2, 2, 1, "", "NetHelixFiberB"], [2, 2, 1, "", "NetSAWLC"], [2, 2, 1, "", "NetSAWLCInter"], [2, 2, 1, "", "Network"]], "polnet.network.Branch": [[2, 3, 1, "", "get_point"], [2, 3, 1, "", "get_s_mmer"], [2, 3, 1, "", "get_s_pmer"], [2, 3, 1, "", "get_t_pmer"], [2, 3, 1, "", "get_vtp"], [2, 3, 1, "", "set_t_pmer"]], "polnet.network.NetHelixFiber": [[2, 3, 1, "", "build_network"]], "polnet.network.NetHelixFiberB": [[2, 3, 1, "", "build_network"], [2, 3, 1, "", "get_branch_list"], [2, 3, 1, "", "get_branches_vtp"], [2, 3, 1, "", "get_skel"]], "polnet.network.NetSAWLC": [[2, 3, 1, "", "build_network"]], "polnet.network.NetSAWLCInter": [[2, 3, 1, "", "build_network"]], "polnet.network.Network": [[2, 3, 1, "", "add_monomer_to_voi"], [2, 3, 1, "", "add_polymer"], [2, 3, 1, "", "build_network"], [2, 3, 1, "", "count_proteins"], [2, 3, 1, "", "gen_vtp_points_tomo"], [2, 3, 1, "", "get_gtruth"], [2, 3, 1, "", "get_num_mmers"], [2, 3, 1, "", "get_num_pmers"], [2, 3, 1, "", "get_pmer_fails"], [2, 3, 1, "", "get_pmers_list"], [2, 3, 1, "", "get_polymer_occupancy"], [2, 3, 1, "", "get_skel"], [2, 3, 1, "", "get_voi"], [2, 3, 1, "", "get_vtp"], [2, 3, 1, "", "insert_density_svol"], [2, 3, 1, "", "set_min_nmmer"], [2, 3, 1, "", "set_voi"]], "polnet.poly": [[2, 1, 1, "", "add_label_to_poly"], [2, 1, 1, "", "add_sfield_to_poly"], [2, 1, 1, "", "convex_hull_surface"], [2, 1, 1, "", "find_point_on_poly"], [2, 1, 1, "", "gen_rand_quaternion_on_vector"], [2, 1, 1, "", "gen_uni_s2_sample_on_poly"], [2, 1, 1, "", "gen_uni_s2_sample_on_poly_inter"], [2, 1, 1, "", "merge_polys"], [2, 1, 1, "", "points_to_poly_spheres"], [2, 1, 1, "", "poly_center_mass"], [2, 1, 1, "", "poly_decimate"], [2, 1, 1, "", "poly_diam"], [2, 1, 1, "", "poly_mask"], [2, 1, 1, "", "poly_max_distance"], [2, 1, 1, "", "poly_point_min_dst"], [2, 1, 1, "", "poly_reverse_normals"], [2, 1, 1, "", "poly_surface_area"], [2, 1, 1, "", "poly_volume"]], "polnet.polymer": [[2, 2, 1, "", "FiberUnit"], [2, 2, 1, "", "FiberUnitSDimer"], [2, 2, 1, "", "HelixFiber"], [2, 2, 1, "", "MTUnit"], [2, 2, 1, "", "Monomer"], [2, 2, 1, "", "Polymer"], [2, 2, 1, "", "SAWLC"], [2, 2, 1, "", "SAWLCPoly"]], "polnet.polymer.FiberUnit": [[2, 3, 1, "", "get_tomo"], [2, 3, 1, "", "get_vtp"]], "polnet.polymer.FiberUnitSDimer": [[2, 3, 1, "", "get_tomo"], [2, 3, 1, "", "get_vtp"]], "polnet.polymer.HelixFiber": [[2, 3, 1, "", "gen_new_monomer"], [2, 3, 1, "", "set_reference"]], "polnet.polymer.MTUnit": [[2, 3, 1, "", "get_tomo"], [2, 3, 1, "", "get_vtp"]], "polnet.polymer.Monomer": [[2, 3, 1, "", "bound_in_bounds"], [2, 3, 1, "", "compute_bounds"], [2, 3, 1, "", "get_area"], [2, 3, 1, "", "get_center_mass"], [2, 3, 1, "", "get_copy"], [2, 3, 1, "", "get_diameter"], [2, 3, 1, "", "get_trans_list"], [2, 3, 1, "", "get_vol"], [2, 3, 1, "", "get_vtp"], [2, 3, 1, "", "insert_density_svol"], [2, 3, 1, "", "overlap_mmer"], [2, 3, 1, "", "overlap_net"], [2, 3, 1, "", "overlap_voi"], [2, 3, 1, "", "point_in_bounds"], [2, 3, 1, "", "rotate_q"], [2, 3, 1, "", "translate"]], "polnet.polymer.Polymer": [[2, 3, 1, "", "add_monomer"], [2, 3, 1, "", "gen_new_monomer"], [2, 3, 1, "", "get_area"], [2, 3, 1, "", "get_mmer_center"], [2, 3, 1, "", "get_mmer_code"], [2, 3, 1, "", "get_mmer_id"], [2, 3, 1, "", "get_mmer_ids"], [2, 3, 1, "", "get_mmer_rotation"], [2, 3, 1, "", "get_mmers_list"], [2, 3, 1, "", "get_monomer"], [2, 3, 1, "", "get_num_mmers"], [2, 3, 1, "", "get_num_monomers"], [2, 3, 1, "", "get_skel"], [2, 3, 1, "", "get_tail_point"], [2, 3, 1, "", "get_total_len"], [2, 3, 1, "", "get_vol"], [2, 3, 1, "", "get_vtp"], [2, 3, 1, "", "insert_density_svol"], [2, 3, 1, "", "overlap_polymer"], [2, 3, 1, "", "set_reference"]], "polnet.polymer.SAWLC": [[2, 3, 1, "", "gen_new_monomer"], [2, 3, 1, "", "set_reference"]], "polnet.polymer.SAWLCPoly": [[2, 3, 1, "", "gen_new_monomer"], [2, 3, 1, "", "set_reference"]], "polnet.stomo": [[2, 2, 1, "", "ActinFile"], [2, 2, 1, "", "HelixFile"], [2, 2, 1, "", "MTFile"], [2, 2, 1, "", "MbFile"], [2, 2, 1, "", "MmerFile"], [2, 2, 1, "", "MmerMbFile"], [2, 2, 1, "", "SetTomos"], [2, 2, 1, "", "SynthTomo"]], "polnet.stomo.ActinFile": [[2, 3, 1, "", "get_bprop"], [2, 3, 1, "", "get_p_branch"], [2, 3, 1, "", "load_ac_file"]], "polnet.stomo.HelixFile": [[2, 3, 1, "", "get_den_cf_rg"], [2, 3, 1, "", "get_hp_len"], [2, 3, 1, "", "get_l"], [2, 3, 1, "", "get_min_nmmer"], [2, 3, 1, "", "get_min_p_len"], [2, 3, 1, "", "get_mmer_rad"], [2, 3, 1, "", "get_mz_len"], [2, 3, 1, "", "get_mz_len_f"], [2, 3, 1, "", "get_occ"], [2, 3, 1, "", "get_over_tol"], [2, 3, 1, "", "get_thick_rg"], [2, 3, 1, "", "get_type"], [2, 3, 1, "", "load_hx_file"]], "polnet.stomo.MTFile": [[2, 3, 1, "", "get_nunits"], [2, 3, 1, "", "get_rad"], [2, 3, 1, "", "load_mt_file"]], "polnet.stomo.MbFile": [[2, 3, 1, "", "get_den_cf_rg"], [2, 3, 1, "", "get_layer_s_rg"], [2, 3, 1, "", "get_max_ecc"], [2, 3, 1, "", "get_min_rad"], [2, 3, 1, "", "get_occ"], [2, 3, 1, "", "get_over_tol"], [2, 3, 1, "", "get_thick_rg"], [2, 3, 1, "", "get_type"], [2, 3, 1, "", "load_mb_file"]], "polnet.stomo.MmerFile": [[2, 3, 1, "", "get_iso"], [2, 3, 1, "", "get_mmer_id"], [2, 3, 1, "", "get_mmer_svol"], [2, 3, 1, "", "get_pmer_l"], [2, 3, 1, "", "get_pmer_l_max"], [2, 3, 1, "", "get_pmer_np"], [2, 3, 1, "", "get_pmer_occ"], [2, 3, 1, "", "get_pmer_over_tol"], [2, 3, 1, "", "load_mmer_file"]], "polnet.stomo.MmerMbFile": [[2, 3, 1, "", "get_mb_z_height"], [2, 3, 1, "", "get_mmer_center"], [2, 3, 1, "", "get_pmer_reverse_normals"], [2, 3, 1, "", "load_mmer_mb_file"]], "polnet.stomo.SetTomos": [[2, 3, 1, "", "add_tomos"], [2, 3, 1, "", "save_csv"]], "polnet.stomo.SynthTomo": [[2, 3, 1, "", "add_network"], [2, 3, 1, "", "add_set_mbs"], [2, 3, 1, "", "get_den"], [2, 3, 1, "", "get_mics"], [2, 3, 1, "", "get_motif_list"], [2, 3, 1, "", "get_poly"], [2, 3, 1, "", "get_tomo"], [2, 3, 1, "", "set_den"], [2, 3, 1, "", "set_mics"], [2, 3, 1, "", "set_poly"], [2, 3, 1, "", "set_tomo"]], "polnet.tem": [[2, 2, 1, "", "TEM"]], "polnet.tem.TEM": [[2, 3, 1, "", "add_detector_noise"], [2, 3, 1, "", "add_mics_misalignment"], [2, 3, 1, "", "gen_tilt_series_imod"], [2, 3, 1, "", "invert_mics_den"], [2, 3, 1, "", "recon3D_imod"], [2, 3, 1, "", "set_header"]], "polnet.utils": [[2, 1, 1, "", "clean_dir"], [2, 1, 1, "", "density_norm"], [2, 1, 1, "", "gen_shpere_mask"], [2, 1, 1, "", "gen_six_connectivity_mask"], [2, 1, 1, "", "gen_uni_s2_sample"], [2, 1, 1, "", "get_sub_copy"], [2, 1, 1, "", "insert_svol_tomo"], [2, 1, 1, "", "is_closed_surface"], [2, 1, 1, "", "iso_surface"], [2, 1, 1, "", "lin_map"], [2, 1, 1, "", "nn_iterp"], [2, 1, 1, "", "numpy_to_vti"], [2, 1, 1, "", "point_to_poly"], [2, 1, 1, "", "points_distance"], [2, 1, 1, "", "poly_filter_triangles"], [2, 1, 1, "", "poly_threshold"], [2, 1, 1, "", "tomo_crop_non_zeros"], [2, 1, 1, "", "trilin_interp"], [2, 1, 1, "", "vol_cube"], [2, 1, 1, "", "wrap_angle"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"]}, "titleterms": {"welcom": 0, "polnet": [0, 1, 2], "": 0, "document": 0, "content": [0, 2], "indic": 0, "tabl": 0, "packag": 2, "submodul": 2, "affin": 2, "modul": 2, "lio": 2, "lrandom": 2, "membran": 2, "network": 2, "poli": 2, "polym": 2, "stomo": 2, "tem": 2, "util": 2}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Welcome to PolNet\u2019s documentation!": [[0, "welcome-to-polnet-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "polnet": [[1, "polnet"]], "polnet package": [[2, "polnet-package"]], "Submodules": [[2, "submodules"]], "polnet.affine module": [[2, "module-polnet.affine"]], "polnet.lio module": [[2, "module-polnet.lio"]], "polnet.lrandom module": [[2, "module-polnet.lrandom"]], "polnet.membrane module": [[2, "module-polnet.membrane"]], "polnet.network module": [[2, "module-polnet.network"]], "polnet.poly module": [[2, "module-polnet.poly"]], "polnet.polymer module": [[2, "module-polnet.polymer"]], "polnet.stomo module": [[2, "module-polnet.stomo"]], "polnet.tem module": [[2, "module-polnet.tem"]], "polnet.utils module": [[2, "module-polnet.utils"]], "Module contents": [[2, "module-polnet"]]}, "indexentries": {"actinfile (class in polnet.stomo)": [[2, "polnet.stomo.ActinFile"]], "branch (class in polnet.network)": [[2, "polnet.network.Branch"]], "ellipgen (class in polnet.lrandom)": [[2, "polnet.lrandom.EllipGen"]], "fiberunit (class in polnet.polymer)": [[2, "polnet.polymer.FiberUnit"]], "fiberunitsdimer (class in polnet.polymer)": [[2, "polnet.polymer.FiberUnitSDimer"]], "helixfiber (class in polnet.polymer)": [[2, "polnet.polymer.HelixFiber"]], "helixfile (class in polnet.stomo)": [[2, "polnet.stomo.HelixFile"]], "mtfile (class in polnet.stomo)": [[2, "polnet.stomo.MTFile"]], "mtunit (class in polnet.polymer)": [[2, "polnet.polymer.MTUnit"]], "mb (class in polnet.membrane)": [[2, "polnet.membrane.Mb"]], "mbellipsoid (class in polnet.membrane)": [[2, "polnet.membrane.MbEllipsoid"]], "mberror": [[2, "polnet.membrane.MbError"]], "mbfile (class in polnet.stomo)": [[2, "polnet.stomo.MbFile"]], "mbsphere (class in polnet.membrane)": [[2, "polnet.membrane.MbSphere"]], "mbtorus (class in polnet.membrane)": [[2, "polnet.membrane.MbTorus"]], "mmerfile (class in polnet.stomo)": [[2, "polnet.stomo.MmerFile"]], "mmermbfile (class in polnet.stomo)": [[2, "polnet.stomo.MmerMbFile"]], "monomer (class in polnet.polymer)": [[2, "polnet.polymer.Monomer"]], "nethelixfiber (class in polnet.network)": [[2, "polnet.network.NetHelixFiber"]], "nethelixfiberb (class in polnet.network)": [[2, "polnet.network.NetHelixFiberB"]], "netsawlc (class in polnet.network)": [[2, "polnet.network.NetSAWLC"]], "netsawlcinter (class in polnet.network)": [[2, "polnet.network.NetSAWLCInter"]], "network (class in polnet.network)": [[2, "polnet.network.Network"]], "occgen (class in polnet.lrandom)": [[2, "polnet.lrandom.OccGen"]], "pgenhelixfiber (class in polnet.lrandom)": [[2, "polnet.lrandom.PGenHelixFiber"]], "pgenhelixfiberb (class in polnet.lrandom)": [[2, "polnet.lrandom.PGenHelixFiberB"]], "polymer (class in polnet.polymer)": [[2, "polnet.polymer.Polymer"]], "sawlc (class in polnet.polymer)": [[2, "polnet.polymer.SAWLC"]], "sawlcpoly (class in polnet.polymer)": [[2, "polnet.polymer.SAWLCPoly"]], "sgen (class in polnet.lrandom)": [[2, "polnet.lrandom.SGen"]], "sgenfixed (class in polnet.lrandom)": [[2, "polnet.lrandom.SGenFixed"]], "sgenprop (class in polnet.lrandom)": [[2, "polnet.lrandom.SGenProp"]], "sgenuniform (class in polnet.lrandom)": [[2, "polnet.lrandom.SGenUniform"]], "setmembranes (class in polnet.membrane)": [[2, "polnet.membrane.SetMembranes"]], "settomos (class in polnet.stomo)": [[2, "polnet.stomo.SetTomos"]], "sphgen (class in polnet.lrandom)": [[2, "polnet.lrandom.SphGen"]], "surfgen (class in polnet.lrandom)": [[2, "polnet.lrandom.SurfGen"]], "synthtomo (class in polnet.stomo)": [[2, "polnet.stomo.SynthTomo"]], "tem (class in polnet.tem)": [[2, "polnet.tem.TEM"]], "torgen (class in polnet.lrandom)": [[2, "polnet.lrandom.TorGen"]], "add_detector_noise() (polnet.tem.tem method)": [[2, "polnet.tem.TEM.add_detector_noise"]], "add_label_to_poly() (in module polnet.poly)": [[2, "polnet.poly.add_label_to_poly"]], "add_mics_misalignment() (polnet.tem.tem method)": [[2, "polnet.tem.TEM.add_mics_misalignment"]], "add_monomer() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.add_monomer"]], "add_monomer_to_voi() (polnet.network.network method)": [[2, "polnet.network.Network.add_monomer_to_voi"]], "add_network() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.add_network"]], "add_polymer() (polnet.network.network method)": [[2, "polnet.network.Network.add_polymer"]], "add_set_mbs() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.add_set_mbs"]], "add_sfield_to_poly() (in module polnet.poly)": [[2, "polnet.poly.add_sfield_to_poly"]], "add_tomos() (polnet.stomo.settomos method)": [[2, "polnet.stomo.SetTomos.add_tomos"]], "angle_axis_to_quat() (in module polnet.affine)": [[2, "polnet.affine.angle_axis_to_quat"]], "bound_in_bounds() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.bound_in_bounds"]], "build_network() (polnet.network.nethelixfiber method)": [[2, "polnet.network.NetHelixFiber.build_network"]], "build_network() (polnet.network.nethelixfiberb method)": [[2, "polnet.network.NetHelixFiberB.build_network"]], "build_network() (polnet.network.netsawlc method)": [[2, "polnet.network.NetSAWLC.build_network"]], "build_network() (polnet.network.netsawlcinter method)": [[2, "polnet.network.NetSAWLCInter.build_network"]], "build_network() (polnet.network.network method)": [[2, "polnet.network.Network.build_network"]], "build_set() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.build_set"]], "check_overlap() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.check_overlap"]], "clean_dir() (in module polnet.utils)": [[2, "polnet.utils.clean_dir"]], "compute_bounds() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.compute_bounds"]], "compute_overlap() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.compute_overlap"]], "convex_hull_surface() (in module polnet.poly)": [[2, "polnet.poly.convex_hull_surface"]], "count_proteins() (polnet.network.network method)": [[2, "polnet.network.Network.count_proteins"]], "density_norm() (in module polnet.utils)": [[2, "polnet.utils.density_norm"]], "find_point_on_poly() (in module polnet.poly)": [[2, "polnet.poly.find_point_on_poly"]], "gen_bounded_exp() (in module polnet.lrandom)": [[2, "polnet.lrandom.gen_bounded_exp"]], "gen_branch() (polnet.lrandom.pgenhelixfiberb method)": [[2, "polnet.lrandom.PGenHelixFiberB.gen_branch"]], "gen_den_cf() (polnet.lrandom.surfgen method)": [[2, "polnet.lrandom.SurfGen.gen_den_cf"]], "gen_length() (polnet.lrandom.pgenhelixfiber method)": [[2, "polnet.lrandom.PGenHelixFiber.gen_length"]], "gen_new_monomer() (polnet.polymer.helixfiber method)": [[2, "polnet.polymer.HelixFiber.gen_new_monomer"]], "gen_new_monomer() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.gen_new_monomer"]], "gen_new_monomer() (polnet.polymer.sawlc method)": [[2, "polnet.polymer.SAWLC.gen_new_monomer"]], "gen_new_monomer() (polnet.polymer.sawlcpoly method)": [[2, "polnet.polymer.SAWLCPoly.gen_new_monomer"]], "gen_next_mmer_id() (polnet.lrandom.sgen method)": [[2, "polnet.lrandom.SGen.gen_next_mmer_id"]], "gen_next_mmer_id() (polnet.lrandom.sgenfixed method)": [[2, "polnet.lrandom.SGenFixed.gen_next_mmer_id"]], "gen_next_mmer_id() (polnet.lrandom.sgenprop method)": [[2, "polnet.lrandom.SGenProp.gen_next_mmer_id"]], "gen_next_mmer_id() (polnet.lrandom.sgenuniform method)": [[2, "polnet.lrandom.SGenUniform.gen_next_mmer_id"]], "gen_occupancy() (polnet.lrandom.occgen method)": [[2, "polnet.lrandom.OccGen.gen_occupancy"]], "gen_parameters() (polnet.lrandom.ellipgen method)": [[2, "polnet.lrandom.EllipGen.gen_parameters"]], "gen_parameters() (polnet.lrandom.sphgen method)": [[2, "polnet.lrandom.SphGen.gen_parameters"]], "gen_parameters() (polnet.lrandom.surfgen method)": [[2, "polnet.lrandom.SurfGen.gen_parameters"]], "gen_parameters() (polnet.lrandom.torgen method)": [[2, "polnet.lrandom.TorGen.gen_parameters"]], "gen_parameters_exp() (polnet.lrandom.ellipgen method)": [[2, "polnet.lrandom.EllipGen.gen_parameters_exp"]], "gen_persistence_length() (polnet.lrandom.pgenhelixfiber method)": [[2, "polnet.lrandom.PGenHelixFiber.gen_persistence_length"]], "gen_rand_quaternion_on_vector() (in module polnet.poly)": [[2, "polnet.poly.gen_rand_quaternion_on_vector"]], "gen_rand_unit_quaternion() (in module polnet.affine)": [[2, "polnet.affine.gen_rand_unit_quaternion"]], "gen_shpere_mask() (in module polnet.utils)": [[2, "polnet.utils.gen_shpere_mask"]], "gen_six_connectivity_mask() (in module polnet.utils)": [[2, "polnet.utils.gen_six_connectivity_mask"]], "gen_tilt_series_imod() (polnet.tem.tem method)": [[2, "polnet.tem.TEM.gen_tilt_series_imod"]], "gen_uni_s2_sample() (in module polnet.utils)": [[2, "polnet.utils.gen_uni_s2_sample"]], "gen_uni_s2_sample_on_poly() (in module polnet.poly)": [[2, "polnet.poly.gen_uni_s2_sample_on_poly"]], "gen_uni_s2_sample_on_poly_inter() (in module polnet.poly)": [[2, "polnet.poly.gen_uni_s2_sample_on_poly_inter"]], "gen_vtp_points_tomo() (polnet.network.network method)": [[2, "polnet.network.Network.gen_vtp_points_tomo"]], "gen_zf_length() (polnet.lrandom.pgenhelixfiber method)": [[2, "polnet.lrandom.PGenHelixFiber.gen_zf_length"]], "get_area() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.get_area"]], "get_area() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_area"]], "get_bprop() (polnet.stomo.actinfile method)": [[2, "polnet.stomo.ActinFile.get_bprop"]], "get_branch_list() (polnet.network.nethelixfiberb method)": [[2, "polnet.network.NetHelixFiberB.get_branch_list"]], "get_branches_vtp() (polnet.network.nethelixfiberb method)": [[2, "polnet.network.NetHelixFiberB.get_branches_vtp"]], "get_center_mass() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.get_center_mass"]], "get_copy() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.get_copy"]], "get_den() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.get_den"]], "get_den_cf_rg() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_den_cf_rg"]], "get_den_cf_rg() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.get_den_cf_rg"]], "get_diameter() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.get_diameter"]], "get_gtruth() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.get_gtruth"]], "get_gtruth() (polnet.network.network method)": [[2, "polnet.network.Network.get_gtruth"]], "get_hp_len() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_hp_len"]], "get_iso() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.get_iso"]], "get_l() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_l"]], "get_layer_s() (polnet.membrane.mb method)": [[2, "polnet.membrane.Mb.get_layer_s"]], "get_layer_s_rg() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.get_layer_s_rg"]], "get_mask() (polnet.membrane.mb method)": [[2, "polnet.membrane.Mb.get_mask"]], "get_max_ecc() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.get_max_ecc"]], "get_mb_occupancy() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.get_mb_occupancy"]], "get_mb_z_height() (polnet.stomo.mmermbfile method)": [[2, "polnet.stomo.MmerMbFile.get_mb_z_height"]], "get_mics() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.get_mics"]], "get_min_nmmer() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_min_nmmer"]], "get_min_p_len() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_min_p_len"]], "get_min_rad() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.get_min_rad"]], "get_mmer_center() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_mmer_center"]], "get_mmer_center() (polnet.stomo.mmermbfile method)": [[2, "polnet.stomo.MmerMbFile.get_mmer_center"]], "get_mmer_code() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_mmer_code"]], "get_mmer_id() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_mmer_id"]], "get_mmer_id() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.get_mmer_id"]], "get_mmer_ids() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_mmer_ids"]], "get_mmer_rad() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_mmer_rad"]], "get_mmer_rotation() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_mmer_rotation"]], "get_mmer_svol() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.get_mmer_svol"]], "get_mmers_list() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_mmers_list"]], "get_monomer() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_monomer"]], "get_motif_list() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.get_motif_list"]], "get_mz_len() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_mz_len"]], "get_mz_len_f() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_mz_len_f"]], "get_num_mbs() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.get_num_mbs"]], "get_num_mmers() (polnet.network.network method)": [[2, "polnet.network.Network.get_num_mmers"]], "get_num_mmers() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_num_mmers"]], "get_num_monomers() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_num_monomers"]], "get_num_pmers() (polnet.network.network method)": [[2, "polnet.network.Network.get_num_pmers"]], "get_nunits() (polnet.stomo.mtfile method)": [[2, "polnet.stomo.MTFile.get_nunits"]], "get_occ() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_occ"]], "get_occ() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.get_occ"]], "get_over_tol() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_over_tol"]], "get_over_tol() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.get_over_tol"]], "get_p_branch() (polnet.stomo.actinfile method)": [[2, "polnet.stomo.ActinFile.get_p_branch"]], "get_pmer_fails() (polnet.network.network method)": [[2, "polnet.network.Network.get_pmer_fails"]], "get_pmer_l() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.get_pmer_l"]], "get_pmer_l_max() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.get_pmer_l_max"]], "get_pmer_np() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.get_pmer_np"]], "get_pmer_occ() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.get_pmer_occ"]], "get_pmer_over_tol() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.get_pmer_over_tol"]], "get_pmer_reverse_normals() (polnet.stomo.mmermbfile method)": [[2, "polnet.stomo.MmerMbFile.get_pmer_reverse_normals"]], "get_pmers_list() (polnet.network.network method)": [[2, "polnet.network.Network.get_pmers_list"]], "get_point() (polnet.network.branch method)": [[2, "polnet.network.Branch.get_point"]], "get_poly() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.get_poly"]], "get_polymer_occupancy() (polnet.network.network method)": [[2, "polnet.network.Network.get_polymer_occupancy"]], "get_rad() (polnet.stomo.mtfile method)": [[2, "polnet.stomo.MTFile.get_rad"]], "get_s_mmer() (polnet.network.branch method)": [[2, "polnet.network.Branch.get_s_mmer"]], "get_s_pmer() (polnet.network.branch method)": [[2, "polnet.network.Branch.get_s_pmer"]], "get_skel() (polnet.network.nethelixfiberb method)": [[2, "polnet.network.NetHelixFiberB.get_skel"]], "get_skel() (polnet.network.network method)": [[2, "polnet.network.Network.get_skel"]], "get_skel() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_skel"]], "get_sub_copy() (in module polnet.utils)": [[2, "polnet.utils.get_sub_copy"]], "get_t_pmer() (polnet.network.branch method)": [[2, "polnet.network.Branch.get_t_pmer"]], "get_tail_point() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_tail_point"]], "get_thick() (polnet.membrane.mb method)": [[2, "polnet.membrane.Mb.get_thick"]], "get_thick_rg() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_thick_rg"]], "get_thick_rg() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.get_thick_rg"]], "get_tomo() (polnet.membrane.mb method)": [[2, "polnet.membrane.Mb.get_tomo"]], "get_tomo() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.get_tomo"]], "get_tomo() (polnet.polymer.fiberunit method)": [[2, "polnet.polymer.FiberUnit.get_tomo"]], "get_tomo() (polnet.polymer.fiberunitsdimer method)": [[2, "polnet.polymer.FiberUnitSDimer.get_tomo"]], "get_tomo() (polnet.polymer.mtunit method)": [[2, "polnet.polymer.MTUnit.get_tomo"]], "get_tomo() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.get_tomo"]], "get_total_len() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_total_len"]], "get_trans_list() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.get_trans_list"]], "get_type() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.get_type"]], "get_type() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.get_type"]], "get_voi() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.get_voi"]], "get_voi() (polnet.network.network method)": [[2, "polnet.network.Network.get_voi"]], "get_vol() (polnet.membrane.mb method)": [[2, "polnet.membrane.Mb.get_vol"]], "get_vol() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.get_vol"]], "get_vol() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.get_vol"]], "get_vol() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_vol"]], "get_vtp() (polnet.membrane.mb method)": [[2, "polnet.membrane.Mb.get_vtp"]], "get_vtp() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.get_vtp"]], "get_vtp() (polnet.network.branch method)": [[2, "polnet.network.Branch.get_vtp"]], "get_vtp() (polnet.network.network method)": [[2, "polnet.network.Network.get_vtp"]], "get_vtp() (polnet.polymer.fiberunit method)": [[2, "polnet.polymer.FiberUnit.get_vtp"]], "get_vtp() (polnet.polymer.fiberunitsdimer method)": [[2, "polnet.polymer.FiberUnitSDimer.get_vtp"]], "get_vtp() (polnet.polymer.mtunit method)": [[2, "polnet.polymer.MTUnit.get_vtp"]], "get_vtp() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.get_vtp"]], "get_vtp() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.get_vtp"]], "insert_density_svol() (polnet.membrane.mb method)": [[2, "polnet.membrane.Mb.insert_density_svol"]], "insert_density_svol() (polnet.network.network method)": [[2, "polnet.network.Network.insert_density_svol"]], "insert_density_svol() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.insert_density_svol"]], "insert_density_svol() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.insert_density_svol"]], "insert_mb() (polnet.membrane.setmembranes method)": [[2, "polnet.membrane.SetMembranes.insert_mb"]], "insert_svol_tomo() (in module polnet.utils)": [[2, "polnet.utils.insert_svol_tomo"]], "invert_mics_den() (polnet.tem.tem method)": [[2, "polnet.tem.TEM.invert_mics_den"]], "is_closed_surface() (in module polnet.utils)": [[2, "polnet.utils.is_closed_surface"]], "iso_surface() (in module polnet.utils)": [[2, "polnet.utils.iso_surface"]], "lin_map() (in module polnet.utils)": [[2, "polnet.utils.lin_map"]], "load_ac_file() (polnet.stomo.actinfile method)": [[2, "polnet.stomo.ActinFile.load_ac_file"]], "load_csv_into_tomo_tables() (in module polnet.lio)": [[2, "polnet.lio.load_csv_into_tomo_tables"]], "load_hx_file() (polnet.stomo.helixfile method)": [[2, "polnet.stomo.HelixFile.load_hx_file"]], "load_mb_file() (polnet.stomo.mbfile method)": [[2, "polnet.stomo.MbFile.load_mb_file"]], "load_mmer_file() (polnet.stomo.mmerfile method)": [[2, "polnet.stomo.MmerFile.load_mmer_file"]], "load_mmer_mb_file() (polnet.stomo.mmermbfile method)": [[2, "polnet.stomo.MmerMbFile.load_mmer_mb_file"]], "load_mrc() (in module polnet.lio)": [[2, "polnet.lio.load_mrc"]], "load_mt_file() (polnet.stomo.mtfile method)": [[2, "polnet.stomo.MTFile.load_mt_file"]], "load_poly() (in module polnet.lio)": [[2, "polnet.lio.load_poly"]], "masking() (polnet.membrane.mb method)": [[2, "polnet.membrane.Mb.masking"]], "merge_polys() (in module polnet.poly)": [[2, "polnet.poly.merge_polys"]], "module": [[2, "module-polnet"], [2, "module-polnet.affine"], [2, "module-polnet.lio"], [2, "module-polnet.lrandom"], [2, "module-polnet.membrane"], [2, "module-polnet.network"], [2, "module-polnet.poly"], [2, "module-polnet.polymer"], [2, "module-polnet.stomo"], [2, "module-polnet.tem"], [2, "module-polnet.utils"]], "nn_iterp() (in module polnet.utils)": [[2, "polnet.utils.nn_iterp"]], "numpy_to_vti() (in module polnet.lio)": [[2, "polnet.lio.numpy_to_vti"]], "numpy_to_vti() (in module polnet.utils)": [[2, "polnet.utils.numpy_to_vti"]], "ortho_vector() (in module polnet.affine)": [[2, "polnet.affine.ortho_vector"]], "overlap_mmer() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.overlap_mmer"]], "overlap_net() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.overlap_net"]], "overlap_polymer() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.overlap_polymer"]], "overlap_voi() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.overlap_voi"]], "point_in_bounds() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.point_in_bounds"]], "point_to_poly() (in module polnet.utils)": [[2, "polnet.utils.point_to_poly"]], "points_distance() (in module polnet.utils)": [[2, "polnet.utils.points_distance"]], "points_to_poly_spheres() (in module polnet.poly)": [[2, "polnet.poly.points_to_poly_spheres"]], "polnet": [[2, "module-polnet"]], "polnet.affine": [[2, "module-polnet.affine"]], "polnet.lio": [[2, "module-polnet.lio"]], "polnet.lrandom": [[2, "module-polnet.lrandom"]], "polnet.membrane": [[2, "module-polnet.membrane"]], "polnet.network": [[2, "module-polnet.network"]], "polnet.poly": [[2, "module-polnet.poly"]], "polnet.polymer": [[2, "module-polnet.polymer"]], "polnet.stomo": [[2, "module-polnet.stomo"]], "polnet.tem": [[2, "module-polnet.tem"]], "polnet.utils": [[2, "module-polnet.utils"]], "poly_center_mass() (in module polnet.poly)": [[2, "polnet.poly.poly_center_mass"]], "poly_decimate() (in module polnet.poly)": [[2, "polnet.poly.poly_decimate"]], "poly_diam() (in module polnet.poly)": [[2, "polnet.poly.poly_diam"]], "poly_filter_triangles() (in module polnet.utils)": [[2, "polnet.utils.poly_filter_triangles"]], "poly_mask() (in module polnet.poly)": [[2, "polnet.poly.poly_mask"]], "poly_max_distance() (in module polnet.poly)": [[2, "polnet.poly.poly_max_distance"]], "poly_point_min_dst() (in module polnet.poly)": [[2, "polnet.poly.poly_point_min_dst"]], "poly_reverse_normals() (in module polnet.poly)": [[2, "polnet.poly.poly_reverse_normals"]], "poly_rotate_wxyz() (in module polnet.affine)": [[2, "polnet.affine.poly_rotate_wxyz"]], "poly_scale() (in module polnet.affine)": [[2, "polnet.affine.poly_scale"]], "poly_surface_area() (in module polnet.poly)": [[2, "polnet.poly.poly_surface_area"]], "poly_threshold() (in module polnet.utils)": [[2, "polnet.utils.poly_threshold"]], "poly_translate() (in module polnet.affine)": [[2, "polnet.affine.poly_translate"]], "poly_volume() (in module polnet.poly)": [[2, "polnet.poly.poly_volume"]], "quat_mult() (in module polnet.affine)": [[2, "polnet.affine.quat_mult"]], "quat_to_angle_axis() (in module polnet.affine)": [[2, "polnet.affine.quat_to_angle_axis"]], "quat_to_mat() (in module polnet.affine)": [[2, "polnet.affine.quat_to_mat"]], "quat_two_vectors() (in module polnet.affine)": [[2, "polnet.affine.quat_two_vectors"]], "read_mrc_v_size() (in module polnet.lio)": [[2, "polnet.lio.read_mrc_v_size"]], "recon3d_imod() (polnet.tem.tem method)": [[2, "polnet.tem.TEM.recon3D_imod"]], "rot_mat_zyz() (in module polnet.affine)": [[2, "polnet.affine.rot_mat_zyz"]], "rot_to_quat() (in module polnet.affine)": [[2, "polnet.affine.rot_to_quat"]], "rot_vect_quat() (in module polnet.affine)": [[2, "polnet.affine.rot_vect_quat"]], "rotate_q() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.rotate_q"]], "save_csv() (polnet.stomo.settomos method)": [[2, "polnet.stomo.SetTomos.save_csv"]], "save_vti() (in module polnet.lio)": [[2, "polnet.lio.save_vti"]], "save_vtp() (in module polnet.lio)": [[2, "polnet.lio.save_vtp"]], "set_den() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.set_den"]], "set_header() (polnet.tem.tem method)": [[2, "polnet.tem.TEM.set_header"]], "set_mics() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.set_mics"]], "set_min_nmmer() (polnet.network.network method)": [[2, "polnet.network.Network.set_min_nmmer"]], "set_poly() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.set_poly"]], "set_reference() (polnet.polymer.helixfiber method)": [[2, "polnet.polymer.HelixFiber.set_reference"]], "set_reference() (polnet.polymer.polymer method)": [[2, "polnet.polymer.Polymer.set_reference"]], "set_reference() (polnet.polymer.sawlc method)": [[2, "polnet.polymer.SAWLC.set_reference"]], "set_reference() (polnet.polymer.sawlcpoly method)": [[2, "polnet.polymer.SAWLCPoly.set_reference"]], "set_t_pmer() (polnet.network.branch method)": [[2, "polnet.network.Branch.set_t_pmer"]], "set_tomo() (polnet.stomo.synthtomo method)": [[2, "polnet.stomo.SynthTomo.set_tomo"]], "set_voi() (polnet.network.network method)": [[2, "polnet.network.Network.set_voi"]], "tomo_crop_non_zeros() (in module polnet.utils)": [[2, "polnet.utils.tomo_crop_non_zeros"]], "tomo_rotate() (in module polnet.affine)": [[2, "polnet.affine.tomo_rotate"]], "tomo_shift() (in module polnet.affine)": [[2, "polnet.affine.tomo_shift"]], "translate() (polnet.polymer.monomer method)": [[2, "polnet.polymer.Monomer.translate"]], "trilin_interp() (in module polnet.utils)": [[2, "polnet.utils.trilin_interp"]], "uniform_sampling_so3() (in module polnet.affine)": [[2, "polnet.affine.uniform_sampling_so3"]], "vect_rotate() (in module polnet.affine)": [[2, "polnet.affine.vect_rotate"]], "vect_to_zmat() (in module polnet.affine)": [[2, "polnet.affine.vect_to_zmat"]], "vector_module() (in module polnet.affine)": [[2, "polnet.affine.vector_module"]], "vol_cube() (in module polnet.utils)": [[2, "polnet.utils.vol_cube"]], "wrap_angle() (in module polnet.utils)": [[2, "polnet.utils.wrap_angle"]], "write_mrc() (in module polnet.lio)": [[2, "polnet.lio.write_mrc"]], "write_table() (in module polnet.lio)": [[2, "polnet.lio.write_table"]]}})